head 
	meta(charset="UTF-8")
	meta(name="viewport" content="initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
//background-image: url('public/images/ui/beach_background.jpg')      background-color: #00ff00;
//body(style="background-image: url('/public/images/ui/cracked_bkg.png')")
body
	script(type='text/javascript', src='/js/jquery/jquery-2.0.3.min.js')
	
	script(type='text/javascript', src='/js/clientutil/clientutil.js')


	script(type='text/javascript', src='/public/js/easyui/jquery.easyui.min.js')
	script(type='text/javascript', src='/public/js/easyui/hopper/easyui.extention.js')
	link(rel='stylesheet', href='/public/js/easyui/themes/ui-sunny/easyui.css')
	link(rel='stylesheet', href='/public/js/easyui/themes/default/icon.css')

	

	link(rel="stylesheet" href="/public/js/skeleton/css/normalize.css")
	link(rel="stylesheet" href="/public/js/skeleton/css/skeleton.css")
	
	//script(type='text/javascript', src='/public/js/hashofarray/v002/hashofarrayobject.js')
	//script(src="/public/js/eventorigin/eventorigin.js" type="text/javascript")

	//script(type='text/javascript', src='public/js/async/async.js')

	//script(type='text/javascript', src='/public/js/reportview/reportview.js')

	link(rel="stylesheet" type="text/css" href="/public/js/perspective/PerspectivePageViewNavigation/css/normalize.css")
	link(rel="stylesheet" type="text/css" href="/public/js/perspective/PerspectivePageViewNavigation/css/demo.css")
	link(rel="stylesheet" type="text/css" href="/public/js/perspective/PerspectivePageViewNavigation/css/component.css")
	script(type="text/javascript" src="/public/js/perspective/PerspectivePageViewNavigation/js/modernizr.custom.25376.js")
	
	


	script.
		var getUserId =function(){return '#{userId}';}
		var getDeviceId = function(){return '#{deviceId}';}
		var getURL = function(){return '#{URL}';}
		var getDefaultUserImageUrl = function(){return '#{defaultUserImageUrl}';}
		var getDefaultMemberImageUrl = function(){return '#{defaultMemberImageUrl}';}

	style.
		.mm-menu
			{
				background: rgba( 0, 0, 0, 0.6 );
				box-shadow: none !important;
				text-align: center;
				color: #fff;
			}
		.logo{
				border: 1px solid #fff;
				line-height: 40px;
				display: inline-block;
				width: 40px;
				height: 80px;
				margin: 0x 0 0 0;
		}
		.imgAndData{
			font-size: 13px;
			font-style: normal;
			font-weight: normal;
			padding-left: 5px;
			LINE-HEIGHT:15px;
			background-color: #eee;

		}

		.magicCirc{
			padding:4px;
			display:inline-block;
			font:12px/14px Arial, Helvetica, sans-serif;
			color:#666;
			border:1px solid #999;
			background-color:#eee;
			-moz-border-radius:10px;
			-webkit-border-radius: 150px;
			-moz-box-shadow:#999 2px 0px 3px;
			-webkit-box-shadow:#999 2px 0px 3px;
			margin-bottom:4px;
		}

		.magicSquare{
			padding:4px;
			display:inline-block;
			font:12px/14px Arial, Helvetica, sans-serif;
			color:#666;
			border:1px solid #999;
			background-color:#eee;
			-moz-border-radius:00px;
			-webkit-border-radius: 15px;
			-moz-box-shadow:#999 2px 0px 3px;
			-webkit-box-shadow:#999 2px 0px 3px;
			margin-bottom:4px;
		}

		.magicCircPnt{
			padding:4px;
			display:inline-block;
			cursor:pointer;
			font:12px/14px Arial, Helvetica, sans-serif;
			color:#666;
			border:1px solid #999;
			background-color:#eee;
			-moz-border-radius:10px;
			-webkit-border-radius: 150px;
			-moz-box-shadow:#999 2px 0px 3px;
			-webkit-box-shadow:#999 2px 0px 3px;
			margin-bottom:4px;
		}

		.center{
			margin-left: auto;
			margin-right: auto;
			width: 70%;
			background-color: #b0e0e6;
		}


		@-webkit-keyframes spaceboots {
			0% { -webkit-transform: translate(2px, 1px) rotate(0deg); }
			10% { -webkit-transform: translate(-1px, -2px) rotate(-40deg); }
			20% { -webkit-transform: translate(-3px, 0px) rotate(40deg); }
			30% { -webkit-transform: translate(0px, 2px) rotate(0deg); }
			40% { -webkit-transform: translate(1px, -1px) rotate(1deg); }
			50% { -webkit-transform: translate(-1px, 2px) rotate(-1deg); }
			60% { -webkit-transform: translate(-3px, 1px) rotate(0deg); }
			70% { -webkit-transform: translate(2px, 1px) rotate(-1deg); }
			80% { -webkit-transform: translate(-1px, -1px) rotate(1deg); }
			90% { -webkit-transform: translate(2px, 2px) rotate(0deg); }
			100% { -webkit-transform: translate(1px, -2px) rotate(-1deg); }
		}
		.shake {
			-webkit-animation-name: spaceboots;
			-webkit-animation-duration: 0.8s;
			-webkit-transform-origin:50% 50%;
			-webkit-animation-iteration-count: 15;//infinite;
			-webkit-animation-timing-function: linear;
		}
		.magicShadow{
			-moz-box-shadow:10px 10px 5px #000000;
			-webkit-box-shadow:10px 10px 5px #000000;
			box-shadow:10px 10px 5px #000000;
		}

		.magicPointer{
			cursor:pointer;
		}

		.textWrap {
			align:left;
			margin-right:20px;
		}
		.textWidthA{
			width:300px;
		}
		img{
			max-width: 100%;
		}
		.lAlign{
			text-align: left;
		}
		.rAlign{
			text-align: right;
		}
		.cAlign{
			text-align: center;
		}
		.max{
			max-width: 100%;
		}

		//==================================================================
		// H T M L
		//==================================================================


	//div(class="container")
			//div(class="wrapper")

	div(id="perspective" class="perspective effect-airbnb")
		div(class="container")
			div(class="wrapper")
				header(class="codrops-header")
					img(src="/public/images/ui/arfsync_logo.png")
					h1(class="lAlign") Why would I create a complete communication stack and protocols?
					p(class="lAlign")
						|	I noticed a problem concerning communication between phone devices and web applications(browser). I could find nothing
						|	that would enable real time communication between phones and browsers. So I set out to create a communication stack or libraries that would be reusable for these purposes. I gave it a pretty nice interface for javascript and java. I created a node js server that that would route my protocol between devices and with lots of other features including security.


					h1(class="lAlign") How are we able to communicate?

					//div(style="width:200px; max-width: 80%;")
					img(align="left" class="textWrap magicSquare magicShadow" style="width:400px; max-width: 100%;" src="/public/images/information/login_shot.png") 
					p(class="lAlign")
						| I created a few ways to log into the server. We can use the common user name and password, but why would I want the user to have to log in twice and then again per each device. I'm guessing in most cases the phone is personal and should be able to store credentials without many concerns. Then the browser is just the opposite. It might be shared between co-workers, hotel residents or other shopping consumers etc.. We might never know the software installed and running along side the browser. It could be key logging or anything. While writing the communication I decided to give the browser a login that uses scannable codes. This way the browser or the computer the browser is running on will never have your user name and password enter into its keyboard cache or into its memory. I do this by using a random GUID that gets shared between browser and the server. When the phone scans this code off the browser screen it then ask the server to login that particular browser session via my communication. The phone then provides its credentials for that particular GUID. The login then happens. It gets a little more complicated handling the session stuff. I will not share that part of the login for security reasons.






