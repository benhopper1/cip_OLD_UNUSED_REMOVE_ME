head 


body()
	script(type='text/javascript', src='/js/jquery/jquery-2.0.3.min.js')
	script(type='text/javascript', src='/js/qrcode/jquery.qrcode.js')
	script(type='text/javascript', src='/js/qrcode/qrcode.js')

	script(type='text/javascript', src='/js/commmanager/commmanager.js')
	script(type='text/javascript', src='/js/clientutil/clientutil.js')


	script(type='text/javascript', src='public/js/easyui/jquery.easyui.min.js')
	link(rel='stylesheet', href='public/js/easyui/themes/default/easyui.css')
	link(rel='stylesheet', href='public/js/easyui/themes/default/icon.css')

	script(type='text/javascript', src='public/js/hashofarray/hashofarrayobject.js')

	//script(type='text/javascript', src='public/js/welcome/treehelper.js')

	script.
		var getUserId =function(){return '#{userId}';}
		var getDeviceId = function(){return '#{deviceId}';}
		var getURL = function(){return '#{URL}';}
	style.
		.imgAndData{
			font-size: 13px;
			font-style: normal;
			font-weight: normal;
			padding-left: 5px;
			LINE-HEIGHT:15px;
			background-color: #eee;

		}

		.magicCirc{
			padding:4px;
			display:inline-block;
			font:12px/14px Arial, Helvetica, sans-serif;
			color:#666;
			border:1px solid #999;
			background-color:#eee;
			-moz-border-radius:10px;
			-webkit-border-radius: 150px;
			-moz-box-shadow:#999 2px 0px 3px;
			-webkit-box-shadow:#999 2px 0px 3px;
			margin-bottom:4px;
		}

		.magicCircPnt{
			padding:4px;
			display:inline-block;
			cursor:pointer;
			font:12px/14px Arial, Helvetica, sans-serif;
			color:#666;
			border:1px solid #999;
			background-color:#eee;
			-moz-border-radius:10px;
			-webkit-border-radius: 150px;
			-moz-box-shadow:#999 2px 0px 3px;
			-webkit-box-shadow:#999 2px 0px 3px;
			margin-bottom:4px;
		}

		.center{
			margin-left: auto;
			margin-right: auto;
			width: 70%;
			background-color: #b0e0e6;
		}

		//- @-webkit-keyframes thumb {
		//- 	0% { -webkit-transform: scale(1); }
		//- 	50% { -webkit-transform: scale(0.5); }
		//- 	100% { -webkit-transform: scale(1); }
		//- }

		//- .backbutton img:hover{
		//- 	-webkit-animation-name: thumb;
		//- 	-webkit-animation-duration: 200ms;
		//- 	-webkit-transform-origin:50% 50%;
		//- 	-webkit-animation-iteration-count: 2;
		//- 	-webkit-animation-timing-function: linear;
		//- }

		@-webkit-keyframes spaceboots {
			0% { -webkit-transform: translate(2px, 1px) rotate(0deg); }
			10% { -webkit-transform: translate(-1px, -2px) rotate(-40deg); }
			20% { -webkit-transform: translate(-3px, 0px) rotate(40deg); }
			30% { -webkit-transform: translate(0px, 2px) rotate(0deg); }
			40% { -webkit-transform: translate(1px, -1px) rotate(1deg); }
			50% { -webkit-transform: translate(-1px, 2px) rotate(-1deg); }
			60% { -webkit-transform: translate(-3px, 1px) rotate(0deg); }
			70% { -webkit-transform: translate(2px, 1px) rotate(-1deg); }
			80% { -webkit-transform: translate(-1px, -1px) rotate(1deg); }
			90% { -webkit-transform: translate(2px, 2px) rotate(0deg); }
			100% { -webkit-transform: translate(1px, -2px) rotate(-1deg); }
		}
		.shake {
			-webkit-animation-name: spaceboots;
			-webkit-animation-duration: 0.8s;
			-webkit-transform-origin:50% 50%;
			-webkit-animation-iteration-count: 15;//infinite;
			-webkit-animation-timing-function: linear;
		}
		//- .shake {
		//- 	display:inline-block
		//- }//just add    shake 




	//background-image: url('public/images/ui/cracked_bkg.png');
	//body(style="background-color: #ffffff;")
	//body(style"background-image: url('public/images/ui/background_crack.jpg')")
	div(id="main_layout_0" class="easyui-layout" data-options="fit:true" style"")
		div(data-options="region:'north',split:true" style="height:50px; background-image: url('public/images/ui/background_crack.jpg')")
			div(class="easyui-panel" data-options="fit:true" style="padding:5px; opacity:.8;")
				a(id="main_menu_lb_0" href="#" class="easyui-linkbutton" data-options="plain:true" style="") Home
				a(id="main_menu_lb_1" href="#" class="easyui-splitbutton" data-options="menu:'#mm2',iconCls:'icon-edit'") Edit
				//a(id="main_menu_lb_2" href="#" class="easyui-splitbutton" data-options="menu:'#mm2',iconCls:'icon-ok'") Ok
				//a(id="main_menu_lb_3" href="#" class="easyui-menubutton" data-options="menu:'#mm3',iconCls:'icon-help'") Help
			div(id="mm2" style="width:100px;")
				div(data-options="iconCls:'icon-ok'") Ok
				div(data-options="iconCls:'icon-cancel'") Cancel


		div(data-options="region:'south',split:true" style="height:50px")
		div(data-options="region:'west',split:true" style="width:150px; background-image: url('public/images/ui/background_crack.jpg')")
		div(data-options="region:'center',split:true,title:'East',collapsible:false" style="background-image: url('public/images/ui/background_crack.jpg')")
			#qrAccord(class="easyui-accordion center" data-options="" style="width:220px;")
				#lay1(title="Scan to login" data-options="iconCls:'icon-search',collapsed:false,collapsible:true" style="padding:10px;")
					center
						#qrCodeDiv(style="background-color: #ffffff;")
				#lay2(title="Who" data-options="" style="padding:10px;")
					center
						#ffffff
							h1 hello man




			img(src="public/temp/12566066202.jpg")
			br
			button(onclick="loadSmsWindow();") loadSmsWindow
			br
			button(onclick="loadContactsWindow();") loadContactsWindow
			br
			button(onclick="getAllSmsByNumber();") getAllSmsByNumber
			br

			#smsWindowDiv
			#contactsWindow
			center
				#phoneContactDiv
				a(id="downloadLinkApp" href="public/download/androidapp/QrReader.apk" download) download app
				//- #qrAccord(class="easyui-accordion" style="width:220px;")
				//- 	#lay1(title="Scan to login" data-options="iconCls:'icon-search',collapsed:false,collapsible:true" style="padding:10px;")
				//- 		center
				//- 			#qrCodeDiv(style="background-color: #ffffff;")
				//- 	#lay2(title="Who" data-options="" style="padding:10px;")
				//- 		center
				//- 			#ffffff
				//- 				h1 hello man
				//#addContactDiv
				button(onclick="doClick();") click
				button(onclick="doClick2();") click2
				button(onclick="doClick3();") click3
				img(id="imgView")

				table(style="width:70%")
					tr
						td
							#treeBase(style="width:200px;height:500px; overflow: scroll; border:1px solid #ccc;")
								ul(id="tree" class="easyui-tree" )

						td
							#displayDiv
							a(id="downloadLink" href="" download)







	script.
		var commManager;
		var deviceTokenId;
		var contactsObject;
		var storageObject;

		var eventObject = new EventObject();

		var widgetSmsMessageWindowScript;

		var deviceQuerySync;

		var menuObject;


		jQuery.fn.center = function () {
			this.css("position","absolute");
			this.css("top", Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) + 
			$(window).scrollTop()) + "px");
			this.css("left", Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) + 
			$(window).scrollLeft()) + "px");
			return this;
		}
		$( document ).ready(function(){
			var waitingDeviceTokenId;
			menuObject = new MenuObject();
			menuObject.load();

			$('#qrAccord').accordion(
				{
					animate:true,
					selected:0
				}
			);

			commManager = commManagerNameSpace.getCommManagerInstance(
				{
					webSocketClient:!{JSON.stringify(webSocketClient)},
					connectToDeviceTypes:
						[
							'androidApp'
						],

					loginByScan:
						{
							onScan:function(inData){
								waitingDeviceTokenId = inData.cd;
								deviceTokenId = inData.cd; //maybe delete this one
								jQuery('#qrCodeDiv').qrcode({
									render	: "table",
									text	: JSON.stringify(inData)
								});
							}
						},
					onReady:function(){
						console.log('onReady');
					},
					onLoginSuccess:function(inTransportLayer_string, inFamilyCredentialArray, filteredCredentialsArray){
						console.log('onLoginSuccess');
						console.dir(inTransportLayer_string);

						//- var transport_json33 = JSON.parse(inTransportLayer_string);
						//- console.log("->userId:" + transport_json33.userId);

						//- if(inTransportLayer_string){
						//- 	if(inTransportLayer_string.userId){
								
						//- 	}
						//- }
						
						//- //set up user id cookie



						sessionSetupAndValidation("loginByScan", waitingDeviceTokenId, function(inJsonStruct){
							createFilters();

							//- waitingDialog = new WaitingDialog();
							//- waitingDialog.show();

							contactsObject = new ContactsObject();
							userObject = new UserObject(function(userErr, userData){
									console.log('userData:');
									console.dir(userData);
									contactsObject.refresh(function(contactErr, contactData){
									console.log('contactsObject callback');
									console.dir(contactData);
									//loadSmsWindow();
									//var panel_0 = $('#qrAccord').accordion('getPanel', 0);
									console.dir($('#qrAccord').accordion('getPanel', 0));
									$('#qrAccord').accordion('getPanel', 0).panel(
										{
											openDuration:3000,
											closeDuration:3000
										}
									),
									$('#qrAccord').accordion('getPanel', 0).panel("collapse",true);
									$('#qrAccord').accordion('getPanel', 1).panel("expand",true);
								});
							});


							
							deviceQuerySync = new DeviceQuerySync(commManager);
							storageObject = new StorageObject();
							storageObject.getSmsLastId(function(inResultOflastId){
								console.log('lastResultId---------------------');
								console.dir(inResultOflastId);
								deviceQuerySync.sms_getAllMessages(inResultOflastId, function(inSmsArray){
									storageObject.addManySms(inSmsArray, function(inResult){

			//							loadSmsWindow();

									});
								});
							});

						});


						
						


						//loadSmsWindow();
						//getAllSmsByNumber();
						//- $.get( "/widget_contactscollection", function(data){
						//- 	$("#contactsWindow").append(data);
						//- });

					},
					//#############################################################################################################
					//--------When one of your family devices dis/connect ---------------------------------------------------------
					//#############################################################################################################

					onFamilyDeviceConnect:function(inMsg, inLocal, inData, inRefObj){
					},

					onFamilyDeviceDisconnect:function(inMsg, inLocal, inData, inRefObj){
					}
				}
			);
		});


		//#############################################################################################################
		//--------C o n t a c t s   O b j e c t ---------------------------------------------------------
		//#############################################################################################################
		var ContactsObject = function(){
			var _this = this;
			var contactHash;

			this.refresh = function(inPostFunction){
				loadData(inPostFunction);
			}

			this.getContactByPhone = function(inNumber){
				if(inNumber){
					if(contactHash){
						var theContact = contactHash[cleanPhoneNumber(inNumber)];
						if(theContact){
							return theContact;
						}else{
							//create blank contact
							return false;
						}
					}
				}
			}
			var uId = 0;
			this.createUnknownContact = function(inJsonStruct){
				if(!(inJsonStruct.phoneNumber)){return false;}
				inJsonStruct.phoneNumber = cleanPhoneNumber(inJsonStruct.phoneNumber);
				var params = 
					{
						cleanPhoneNumber: (inJsonStruct.cleanPhoneNumber) ? inJsonStruct.cleanPhoneNumber : inJsonStruct.phoneNumber,
						companyName: "",
						department: "",
						emailAddress: "",
						id: 'unknown_' + uId++,
						imageUrl: "/public/images/characters/unknown.png",
						name: "Unknown",
						phoneNumber: "",
						refNumber: "",
						title: "",
						userId: false
					}
				params = $.extend(params,inJsonStruct);
				contactHash[inJsonStruct.phoneNumber] = params;
				return params;
			}

			this.getAllContacts = function(){
				if(contactHash){
					return contactHash;
				}
			}

			this.getAllContactsAsArray = function(){
				var theArray = [];
				if(contactHash){
					for(key in contactHash){
						theArray.push(contactHash[key]);
					}
				}
				return theArray;
			}

			this.getImageUrlByPhone = function(){
				if(inNumber){
					if(contactHash){
						var theContact = contactHash[cleanPhoneNumber(inNumber)];
						if(theContact){
							var theImageUrl = theContact.imageUrl;
							if(theImageUrl){
								return theContact.imageUrl;
							}
						}
					}
				}
				return false;
			}

			var loadData = function(inPostFunction){
				$postAjax(
					{
						url:'database/getContacts',
						send:
							{

							},
						onAjaxSuccess:function(inResponseText){

							inResponseText = JSON.parse(inResponseText);
							var contactInfoHashByPhone = {};
							if(inResponseText.hadError == false){
								//console.log('inResponseText.hadError == false');
								if(inResponseText.rows){
									for(rowIndex in inResponseText.rows){
										if(inResponseText.rows[rowIndex].phoneNumber){
											var cleanedPhoneNumber = cleanPhoneNumber(inResponseText.rows[rowIndex].phoneNumber);
											inResponseText.rows[rowIndex].cleanPhoneNumber = cleanedPhoneNumber;
											contactInfoHashByPhone[cleanedPhoneNumber] = inResponseText.rows[rowIndex];
										}
									}
									contactHash = contactInfoHashByPhone;
								}
							}
							console.log('####################################################');
							console.log('------> CONTACT OBJECTS LOADED.... <----------------');
							console.log('####################################################');
							if(inPostFunction){
								inPostFunction(inResponseText.hadError, contactInfoHashByPhone);
							}
						}
					}
				);
			}
		}//end contactsObj...

		//#############################################################################################################
		//-------- W a i t i n g   D i a l o g ---------------------------------------------------------
		//#############################################################################################################
		var WaitingDialog = function(){
			var id = "dd_" + new Date().getTime();
			var htmlString = '<div id="' + id + '"><center><img id="waitImage" src="public/images/ui/wait.gif"></img></center>></div>';
			$("body").append(htmlString);
			$('#' + id).dialog(
				{
					title: 'My Dialog',
					width: 400,
					height: 200,
					closed: false,
					cache: false,
					//href: 'get_content.php',
					modal: true
				}
			);
			//var dialogHtml ='<center><dialog id="window"><h3>Hello World!</h3><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Earum, inventore!</p><button id="waitDialogCancelButton">Exit</button></dialog>';
			
			this.show = function(){
				$('#' + id).dialog('open');
			}

			this.close = function(){
				$('#' + id).dialog('close');
			}

		}

		//#############################################################################################################
		//-------- U s e r   O b j e c t ---------------------------------------------------------
		//#############################################################################################################
		var UserObject = function(inPostFunction){
			var _this = this;
			var userData;
			this.getUserData = function(){
				return userData;
			}

			this.refresh = function(inPostFunction){
				_this.loadData(inPostFunction);
			}

			this.getImageUrl = function(){
				if(userData){
					if(userData.screenImage){
						return userData.screenImage;
					}
				}
				return false;
			}

			var loadData = function(inPostFunction){
				$postAjax(
					{
						url:'database/getUserData',
						send:
							{

							},
						onAjaxSuccess:function(inResponseText){
							inResponseText = JSON.parse(inResponseText);
							var contactInfoHashByPhone = {};
							if(inResponseText.hadError == false){
								console.log('inResponseText.hadError == false');
								if(inResponseText.rows){
									userData = inResponseText.rows[0];
									console.log('userdata--------------------------');
									console.dir(userData);
								}
							}

							if(inPostFunction){
								inPostFunction(inResponseText.hadError, userData);
							}
						}
					}
				);
			}
			loadData(inPostFunction);
		}//end userObj...

		//#############################################################################################################
		//--------M E N U   O B J E C T ---------------------------------------------------------
		//#############################################################################################################
		var MenuObject = function(){
			var _this = this;

			this.load = function(){
				$('#main_menu_lb_0').linkbutton(
					{
						text:'Send Sms',
						iconCls:'icon-ok',
						iconAlign:'left',
						width:80
					}
				);
			}
		}



		//------
		var createFilters = function(){
			var filterObj = new commManager.FilterObject();
			filterObj.add('notification', function(inMsg, inLocal, inTransportLayer_json, inRefObj){



				if(inTransportLayer_json.dataLayer.action == 'outgoingSms'){
					console.log('outgoingSms--------------------');
					eventObject.reportOn('outgoingSms', inTransportLayer_json);
					// reread sync between db and phn
					storageObject.getSmsLastId(function(inResultOflastId){
						deviceQuerySync.sms_getAllMessages(inResultOflastId, function(inSmsArray){
							storageObject.addManySms(inSmsArray, function(inResult){
								if(widgetSmsMessageWindowScript){
									if(widgetSmsMessageWindowScript){
										if(widgetSmsMessageWindowScript.comboGetSelected()){
											var selectedPhone = widgetSmsMessageWindowScript.comboGetSelected().phoneNumber;
											if(selectedPhone){
												if(inTransportLayer_json.dataLayer){
													if(inTransportLayer_json.dataLayer.phoneNumber){
														if(inTransportLayer_json.dataLayer.phoneNumber == selectedPhone){
															console.log('widgetSmsMessageWindowScript.refreshGrid()--------------------');
															widgetSmsMessageWindowScript.refreshGrid();
														}
													}
												}
											}
										}
									}
								}
							});
						});
					});
				}//endOutgoingSms---




				if(inTransportLayer_json.dataLayer.action == 'incomingSms'){
					eventObject.reportOn('incomingSms', inTransportLayer_json);
					storageObject.getSmsLastId(function(inResultOflastId){
						deviceQuerySync.sms_getAllMessages(inResultOflastId, function(inSmsArray){
							storageObject.addManySms(inSmsArray, function(inResult){
								if(widgetSmsMessageWindowScript){
									if(widgetSmsMessageWindowScript){
										if(widgetSmsMessageWindowScript.comboGetSelected()){
											var selectedPhone = widgetSmsMessageWindowScript.comboGetSelected().phoneNumber;
											if(selectedPhone){
												if(inTransportLayer_json.dataLayer){
													if(inTransportLayer_json.dataLayer.phoneNumber){
														if(inTransportLayer_json.dataLayer.phoneNumber == selectedPhone){
															console.log('widgetSmsMessageWindowScript.refreshGrid()--------------------');
															widgetSmsMessageWindowScript.refreshGrid();
														}
													}
												}
											}
										}
									}
								}
							});
						});
					});
					$.messager.show(
						{
							timeout:5000,
							title:"<img style='float: left; height:40px' src='public/images/ui/email.png'/>" + "Incoming Sms Message",
							msg:'Name:' + inTransportLayer_json.dataLayer.name + '<br>' + 'Phone Number:' + inTransportLayer_json.dataLayer.phoneNumber + '<br><br>' + 'Message:<br>' + inTransportLayer_json.dataLayer.msg,
							showType:'slide',
							height:'300px',
							style:
								{
									right:'',
									top:document.body.scrollTop+document.documentElement.scrollTop,
									bottom:''
								}
						}
					);
				}

				if(inTransportLayer_json.dataLayer.action == 'incomingPhoneCall'){
					eventObject.reportOn('incomingPhoneCall', inTransportLayer_json);
					$.messager.show(
						{
							timeout:5000,
							title:"<img style='float: left; height:40px' src='public/images/ui/email.png'/>" + "Incoming Phone Call",
							msg:'Name:' + inTransportLayer_json.dataLayer.name + '<br>' + 'Phone Number:' + inTransportLayer_json.dataLayer.phoneNumber,
							showType:'slide',
							height:'300px',
							style:
								{
									right:'',
									top:document.body.scrollTop+document.documentElement.scrollTop,
									bottom:''
								}
						}
					);
				}




			});
		}

		var doClick = function(){
			console.log('doClick');
			commManager.transactionToDeviceToken(
				{
					routing:
						{
							command:'openPhone'
						},

					onComplete:function(inDataLayer, inTransportLayer){
						console.log('onComplete transactionToDeviceToken call back entered');
					}
				}
			);
		}

		var doClick2 = function(){
			console.log('doClick2');
			commManager.transactionToDeviceToken(
				{
					routing:
						{
							command:'phoneToSpeaker'
						},

					onComplete:function(inDataLayer, inTransportLayer){
						console.log('onComplete transactionToDeviceToken call back entered');
					}
				}
			);
		}

		var doClick3 = function(){
			console.log('doClick3');
			commManager.transactionToDeviceToken(
				{
					routing:
						{
							command:'getContactInformation'
						},

					onComplete:function(inDataLayer, inTransportLayer){
						console.log('onComplete transactionToDeviceToken call back entered');
						console.dir(inDataLayer);
						console.log('---------------------------------------');
						console.dir(inDataLayer.contactInformation);

						var memberPanel_ajxObj = new clientUtilModule.AjaxJsonPostObject(
								{
									url:'widget_phoneContacts',
									onAjaxSuccess:function(inResponseText){
										$('#phoneContactDiv').html(inResponseText);
									}
								}
						).send(
							{
								contactInformation:inDataLayer.contactInformation
							}
						);


					}
				}
			);





		}




		var sessionSetupAndValidation = function(inType, inWaitingDeviceTokenId, inPostFunction){
			$postAjax(
				{
					url:'security/process',
					send:
						{
							type:inType,
							waitingDeviceTokenId:inWaitingDeviceTokenId
						},
					onAjaxSuccess:function(inResponseText){
						//alert(inResponseText);
						if(inPostFunction){inPostFunction(JSON.parse(inResponseText));}
					}
				}
			);
		}

		var loadSmsWindow = function(){
			$( "#smsWindowDiv" ).load( "/widget_smsmessagewindow", function(){
				widgetSmsMessageWindowScript.load();
				widgetSmsMessageWindowScript.show();

			});

			//- $.get( "/widget_smsmessagewindow", function(data){
			//- 		$("#smsWindowDiv").append(data);
			//- });
		}

		var loadContactsWindow = function(){
			$( "#contactsWindow" ).load( "/widget_contactscollection", function(){
				//widgetContactsCollectionScript.loadWindow();
				widgetContactsCollectionScript.load();
				widgetContactsCollectionScript.show();

			});

			//- $.get( "/widget_contactscollection", function(data){
			//- 	$("#contactsWindow").append(data);
			//- });
		}

		var chunkArray;
		var getAllSmsByNumber = function(){
			commManager.sendTransactionSeries(
				{
					command:'getAllSmsByNumber', //'GetAllSmsByNumber',
					data:
						{
							phoneNumber:"256-606-6202"

						},
					onFirst:function(inTransportLayer_json, inCommand, inTransactionSeriesId, inFrame, inDataLayer_json, next){
						console.log("CALBACK onFirst");
						chunkArray = [];
					},

					onLast:function(inTransportLayer_json, inCommand, inTransactionSeriesId, inFrame, inDataLayer_json, next){
						console.log("CALBACK onLast");
						console.dir(chunkArray);
					},

					onAll:function(inTransportLayer_json, inCommand, inTransactionSeriesId, inFrame, inDataLayer_json, next){
						console.log("CALBACK onAll");

						if(inDataLayer_json.dataArray){
							for(index in inDataLayer_json.dataArray){
								chunkArray.push(inDataLayer_json.dataArray[index]);
							}
						}

						next();
					},
					onComplete:function(inTransportLayer_json, inCommand, inTransactionSeriesId, inFrame, inDataLayer_json, next){
						console.log("CALBACK onComplete");
						console.dir(chunkArray);
					}

				}
			);
		}

		var imageShakeByPhone = function(inPhone){
			//$('img').addClass('shake');
			console.log('imageShakeByPhone start' + inPhone);
			//$( "img[phone='" + inPhone + "']" ).next().addClass('shake');
			$( "img[phone='" + inPhone + "']" ).each(function(index){
				$( this ).addClass('shake');
			});

			setTimeout(function(){
				//$('img').removeClass('shake');
				console.log('imageShakeByPhone stop' + inPhone);
				//$( "img[phone='" + inPhone + "']" ).next().removeClass('shake');
				$( "img[phone='" + inPhone + "']" ).each(function(index){
					$( this ).removeClass('shake');
				});
			}, 15000);
			
		}